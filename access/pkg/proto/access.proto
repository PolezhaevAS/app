syntax = "proto3";

package access.grpc;
option go_package = "app/access/pkg/proto;pb";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

// Access service -
// used for work with users access
service Access {

    // Get list groups
    // Request: last id, limit
    // Response: list groups
    rpc List(google.protobuf.Empty) returns(ListResponse) {
        option (google.api.http) = {
            get: "/v1/access/groups"
        };
    }

    // Get group by id
    // Request: id
    // Response: group
    rpc Group(GroupRequest) returns(GroupResponse) {
        option (google.api.http) = {
            get: "/v1/access/groups/group"
        };
    };

    // Create new group
    // Request: name, description
    // Response: 
    rpc CreateGroup(CreateGroupRequest) returns(google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/access/groups"
            body: "*"
        };
    }

    // Update group by id
    // Request: id, name, description
    // Response:
    rpc UpdateGroup(UpdateGroupRequest) returns(google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/v1/access/groups"
            body: "*"
        };
    }

    // Delete group by id
    // Request: id
    // Response:
    rpc DeleteGroup(DeleteGroupRequest) returns(google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/access/groups"
        };
    }

    // Get users from group
    // Request: group id
    // Response: list users id
    rpc Users(UsersRequest) returns(UsersResponse) {
        option (google.api.http) = {
            get: "/v1/access/groups/users"
        };
    }

    // Add users into group by group id
    // Request: group id, user id
    // Response: 
    rpc AddUser(AddUserRequest) returns(google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/v1/access/groups/users"
            body: "*"
        };
    }

    // Remove user from group by group id and user id
    // Request: group id, user id
    // Response: 
    rpc RemoveUser(RemoveUserRequest) returns(google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/access/groups/users"
        };
    }

    // Get list services
    // Request: 
    // Response: list services
    rpc ListServices(google.protobuf.Empty) returns(ListServicesResponse) {
        option (google.api.http) = {
            get: "/v1/access/services"
        };
    }

    // Add method into group
    // Request: group id, method id
    // Response: 
    rpc AddMethod(AddMethodRequest) returns(google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/v1/access/groups/methods"
            body: "*"
        };
    }

    // Remove method from group
    // Request: group id, method id
    // Response: 
    rpc RemoveMethod(RemoveMethodRequest) returns(google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/access/groups/methods"
        };
    }
}

// 
message Method {
    uint64 id = 1;
    string name = 2;
}

// 
message Service {
    uint64 id = 1;
    string name = 2;
    repeated Method methods = 3;
}

// 
message Group {
    uint64 id = 1;
    string name = 2;
    string desc = 3;
    repeated uint64 users = 4;
    repeated Method methods = 5;
}

//
message AccessUser {
    string service = 1;
    string method = 2;
}

//
message ListResponse {
    // List groups
    repeated Group groups = 1;
}

//
message GroupRequest {
    // Group identificator
    uint64 id = 1;
}

//
message GroupResponse {
    // Group
    Group group = 1;
}

// 
message CreateGroupRequest {
    // Name of new group
    string name = 1;

    string desc = 2;
}

//
message UpdateGroupRequest {
    // Group identificator
    uint64 id = 1;
    // New name
    string name = 2;

    string desc = 3;
}

//
message DeleteGroupRequest {
    // Group identificator
    uint64 id = 1;
}

//
message UsersRequest {
    // Group identificator
    uint64 id = 1;
}

// 
message UsersResponse {
    // List users identificator
    repeated uint64 users = 1;
}

//
message AddUserRequest {
    // Group identificator
    uint64 group_id = 1;

    // User identificator
    uint64 user_id = 2;
}

//
message RemoveUserRequest {
    // Group identificator
    uint64 group_id = 1;

    // User identificator
    uint64 user_id = 2;
}

// 
message ListServicesResponse {
    // List services
    repeated Service services = 1;
}

// 
message AddMethodRequest {
    // Group identificator
    uint64 group_id = 1;

    // Method identificator
    uint64 method_id = 2;
}

// 
message RemoveMethodRequest {
    // Group identificator
    uint64 group_id = 1;

    // Method identificator
    uint64 method_id = 2;
}